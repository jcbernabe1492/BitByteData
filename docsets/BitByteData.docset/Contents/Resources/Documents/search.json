{"Classes/MsbBitWriter.html#/s:11BitByteData03MsbA6WriterC4data10Foundation0C0Vvp":{"name":"data","abstract":"<p>Data which contains writer&rsquo;s output (the last byte in progress is not included).</p>","parent_name":"MsbBitWriter"},"Classes/MsbBitWriter.html#/s:11BitByteData03MsbA6WriterC9isAlignedSbvp":{"name":"isAligned","abstract":"<p>True, if writer&rsquo;s BIT pointer is aligned with the BYTE border.</p>","parent_name":"MsbBitWriter"},"Classes/MsbBitWriter.html#/s:11BitByteData03MsbA6WriterCACycfc":{"name":"init()","abstract":"<p>Creates an instance for writing bits (and bytes).</p>","parent_name":"MsbBitWriter"},"Classes/MsbBitWriter.html#/s:11BitByteData03MsbA6WriterC5write3bitys5UInt8V_tF":{"name":"write(bit:)","abstract":"<p>Writes <code>bit</code>, advancing by one BIT position.</p>","parent_name":"MsbBitWriter"},"Classes/MsbBitWriter.html#/s:11BitByteData03MsbA6WriterC5write6number9bitsCountySi_SitF":{"name":"write(number:bitsCount:)","abstract":"<p>Writes <code>number</code>, using and advancing by <code>bitsCount</code> BIT positions.</p>","parent_name":"MsbBitWriter"},"Classes/MsbBitWriter.html#/s:11BitByteData03MsbA6WriterC5write14unsignedNumber9bitsCountySu_SitF":{"name":"write(unsignedNumber:bitsCount:)","abstract":"<p>Writes <code>number</code>, using and advancing by <code>bitsCount</code> BIT positions.</p>","parent_name":"MsbBitWriter"},"Classes/MsbBitWriter.html#/s:11BitByteData03MsbA6WriterC6append4byteys5UInt8V_tF":{"name":"append(byte:)","abstract":"<p>Writes <code>byte</code>, advancing by one BYTE position.</p>","parent_name":"MsbBitWriter"},"Classes/MsbBitWriter.html#/s:11BitByteData03MsbA6WriterC5alignyyF":{"name":"align()","abstract":"<p>Aligns writer&rsquo;s BIT pointer to the BYTE border, i.e. moves BIT pointer to the first BIT of the next BYTE,","parent_name":"MsbBitWriter"},"Classes/LsbBitWriter.html#/s:11BitByteData03LsbA6WriterC4data10Foundation0C0Vvp":{"name":"data","abstract":"<p>Data which contains writer&rsquo;s output (the last byte in progress is not included).</p>","parent_name":"LsbBitWriter"},"Classes/LsbBitWriter.html#/s:11BitByteData03LsbA6WriterC9isAlignedSbvp":{"name":"isAligned","abstract":"<p>True, if writer&rsquo;s BIT pointer is aligned with the BYTE border.</p>","parent_name":"LsbBitWriter"},"Classes/LsbBitWriter.html#/s:11BitByteData03LsbA6WriterCACycfc":{"name":"init()","abstract":"<p>Creates an instance for writing bits (and bytes).</p>","parent_name":"LsbBitWriter"},"Classes/LsbBitWriter.html#/s:11BitByteData03LsbA6WriterC5write3bitys5UInt8V_tF":{"name":"write(bit:)","abstract":"<p>Writes <code>bit</code>, advancing by one BIT position.</p>","parent_name":"LsbBitWriter"},"Classes/LsbBitWriter.html#/s:11BitByteData03LsbA6WriterC5write6number9bitsCountySi_SitF":{"name":"write(number:bitsCount:)","abstract":"<p>Writes <code>number</code>, using and advancing by <code>bitsCount</code> BIT positions.</p>","parent_name":"LsbBitWriter"},"Classes/LsbBitWriter.html#/s:11BitByteData03LsbA6WriterC5write14unsignedNumber9bitsCountySu_SitF":{"name":"write(unsignedNumber:bitsCount:)","abstract":"<p>Writes <code>number</code>, using and advancing by <code>bitsCount</code> BIT positions.</p>","parent_name":"LsbBitWriter"},"Classes/LsbBitWriter.html#/s:11BitByteData03LsbA6WriterC6append4byteys5UInt8V_tF":{"name":"append(byte:)","abstract":"<p>Writes <code>byte</code>, advancing by one BYTE position.</p>","parent_name":"LsbBitWriter"},"Classes/LsbBitWriter.html#/s:11BitByteData03LsbA6WriterC5alignyyF":{"name":"align()","abstract":"<p>Aligns writer&rsquo;s BIT pointer to the BYTE border, i.e. moves BIT pointer to the first BIT of the next BYTE,","parent_name":"LsbBitWriter"},"Protocols/BitWriter.html#/s:11BitByteData0A6WriterP4data10Foundation0C0Vvp":{"name":"data","abstract":"<p>Data which contains writer&rsquo;s output (the last byte in progress is not included).</p>","parent_name":"BitWriter"},"Protocols/BitWriter.html#/s:11BitByteData0A6WriterP9isAlignedSbvp":{"name":"isAligned","abstract":"<p>True, if writer&rsquo;s BIT pointer is aligned with the BYTE border.</p>","parent_name":"BitWriter"},"Protocols/BitWriter.html#/s:11BitByteData0A6WriterPxycfc":{"name":"init()","abstract":"<p>Creates an instance for writing bits (and bytes).</p>","parent_name":"BitWriter"},"Protocols/BitWriter.html#/s:11BitByteData0A6WriterP5write3bitys5UInt8V_tF":{"name":"write(bit:)","abstract":"<p>Writes <code>bit</code>, advancing by one BIT position.</p>","parent_name":"BitWriter"},"Protocols/BitWriter.html#/s:11BitByteData0A6WriterP5write4bitsySays5UInt8VG_tF":{"name":"write(bits:)","abstract":"<p>Writes <code>bits</code>, advancing by <code>bits.count</code> BIT positions.</p>","parent_name":"BitWriter"},"Protocols/BitWriter.html#/s:11BitByteData0A6WriterP5write6number9bitsCountySi_SitF":{"name":"write(number:bitsCount:)","abstract":"<p>Writes <code>number</code>, using and advancing by <code>bitsCount</code> BIT positions.</p>","parent_name":"BitWriter"},"Protocols/BitWriter.html#/s:11BitByteData0A6WriterP6append4byteys5UInt8V_tF":{"name":"append(byte:)","abstract":"<p>Writes <code>byte</code>, advancing by one BYTE position.</p>","parent_name":"BitWriter"},"Protocols/BitWriter.html#/s:11BitByteData0A6WriterP5alignyyF":{"name":"align()","abstract":"<p>Aligns writer&rsquo;s BIT pointer to the BYTE border, i.e. moves BIT pointer to the first BIT of the next BYTE,","parent_name":"BitWriter"},"Protocols/BitWriter.html":{"name":"BitWriter","abstract":"<p>A type that contains functions for writing <code>Data</code> bit-by-bit (and byte-by-byte).</p>"},"Classes/LsbBitWriter.html":{"name":"LsbBitWriter","abstract":"<p>A type that contains functions for writing <code>Data</code> bit-by-bit (and byte-by-byte),"},"Classes/MsbBitWriter.html":{"name":"MsbBitWriter","abstract":"<p>A type that contains functions for writing <code>Data</code> bit-by-bit (and byte-by-byte),"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC9isAlignedSbvp":{"name":"isAligned","abstract":"<p>True, if reader&rsquo;s BIT pointer is aligned with the BYTE border.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC8bitsLeftSivp":{"name":"bitsLeft","abstract":"<p>Amount of bits left to read.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC8bitsReadSivp":{"name":"bitsRead","abstract":"<p>Amount of bits that were already read.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC4dataAC10Foundation0C0V_tcfc":{"name":"init(data:)","abstract":"<p>Creates an instance for reading bits (and bytes) from <code>data</code>.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderCyAcA0bE0Ccfc":{"name":"init(_:)","abstract":"<p>Converts a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ByteReader.html\">ByteReader</a></code> instance into <code>MsbBitReader</code>, enabling bit reading capabilities. Current <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC6offsetSivp\">offset</a></code> value of","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC7advance2byySi_tF":{"name":"advance(by:)","abstract":"<p>Advances reader&rsquo;s BIT pointer by specified amount of bits (default is 1).</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC3bits5UInt8VyF":{"name":"bit()","abstract":"<p>Reads bit and returns it, advancing by one BIT position.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC4bits5countSays5UInt8VGSi_tF":{"name":"bits(count:)","abstract":"<p>Reads <code>count</code> bits and returns them as an array of <code>UInt8</code>, advancing by <code>count</code> BIT positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC3int8fromBitsS2i_tF":{"name":"int(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>Int</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC4byte8fromBitss5UInt8VSi_tF":{"name":"byte(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt8</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC6uint168fromBitss6UInt16VSi_tF":{"name":"uint16(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt16</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC6uint328fromBitss6UInt32VSi_tF":{"name":"uint32(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt32</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC6uint648fromBitss6UInt64VSi_tF":{"name":"uint64(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt64</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC5alignyyF":{"name":"align()","abstract":"<p>Aligns reader&rsquo;s BIT pointer to the BYTE border, i.e. moves BIT pointer to the first BIT of the next BYTE.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC6offsetSivp":{"name":"offset","abstract":"<p>Offset to the byte in <code>data</code> which will be read next.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC4bytes5UInt8VyF":{"name":"byte()","abstract":"<p>Reads byte and returns it, advancing by one BYTE position.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC5bytes5countSays5UInt8VGSi_tF":{"name":"bytes(count:)","abstract":"<p>Reads <code>count</code> bytes and returns them as an array of <code>UInt8</code>, advancing by <code>count</code> BYTE positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC3int9fromBytesS2i_tF":{"name":"int(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as an <code>Int</code> number, advancing by <code>fromBytes</code> BYTE positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC6uint64s6UInt64VyF":{"name":"uint64()","abstract":"<p>Reads 8 bytes and returns them as a <code>UInt64</code> number, advancing by 8 BYTE positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC6uint649fromBytess6UInt64VSi_tF":{"name":"uint64(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as a <code>UInt64</code> number, advancing by <code>fromBytes</code> BYTE positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC6uint32s6UInt32VyF":{"name":"uint32()","abstract":"<p>Reads 4 bytes and returns them as a <code>UInt32</code> number, advancing by 4 BYTE positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC6uint329fromBytess6UInt32VSi_tF":{"name":"uint32(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as a <code>UInt32</code> number, advancing by <code>fromBytes</code> BYTE positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC6uint16s6UInt16VyF":{"name":"uint16()","abstract":"<p>Reads 2 bytes and returns them as a <code>UInt16</code> number, advancing by 2 BYTE positions.</p>","parent_name":"MsbBitReader"},"Classes/MsbBitReader.html#/s:11BitByteData03MsbA6ReaderC6uint169fromBytess6UInt16VSi_tF":{"name":"uint16(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as a <code>UInt16</code> number, advancing by <code>fromBytes</code> BYTE positions.</p>","parent_name":"MsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC9isAlignedSbvp":{"name":"isAligned","abstract":"<p>True, if reader&rsquo;s BIT pointer is aligned with the BYTE border.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC8bitsLeftSivp":{"name":"bitsLeft","abstract":"<p>Amount of bits left to read.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC8bitsReadSivp":{"name":"bitsRead","abstract":"<p>Amount of bits that were already read.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC4dataAC10Foundation0C0V_tcfc":{"name":"init(data:)","abstract":"<p>Creates an instance for reading bits (and bytes) from <code>data</code>.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderCyAcA0bE0Ccfc":{"name":"init(_:)","abstract":"<p>Converts a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ByteReader.html\">ByteReader</a></code> instance into <code>LsbBitReader</code>, enabling bit reading capabilities. Current <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC6offsetSivp\">offset</a></code> value of","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC7advance2byySi_tF":{"name":"advance(by:)","abstract":"<p>Advances reader&rsquo;s BIT pointer by specified amount of bits (default is 1).</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC3bits5UInt8VyF":{"name":"bit()","abstract":"<p>Reads bit and returns it, advancing by one BIT position.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC4bits5countSays5UInt8VGSi_tF":{"name":"bits(count:)","abstract":"<p>Reads <code>count</code> bits and returns them as an array of <code>UInt8</code>, advancing by <code>count</code> BIT positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC3int8fromBitsS2i_tF":{"name":"int(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>Int</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC4byte8fromBitss5UInt8VSi_tF":{"name":"byte(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt8</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC6uint168fromBitss6UInt16VSi_tF":{"name":"uint16(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt16</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC6uint328fromBitss6UInt32VSi_tF":{"name":"uint32(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt32</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC6uint648fromBitss6UInt64VSi_tF":{"name":"uint64(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt64</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC5alignyyF":{"name":"align()","abstract":"<p>Aligns reader&rsquo;s BIT pointer to the BYTE border, i.e. moves BIT pointer to the first BIT of the next BYTE.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC6offsetSivp":{"name":"offset","abstract":"<p>Offset to the byte in <code>data</code> which will be read next.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC4bytes5UInt8VyF":{"name":"byte()","abstract":"<p>Reads byte and returns it, advancing by one BYTE position.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC5bytes5countSays5UInt8VGSi_tF":{"name":"bytes(count:)","abstract":"<p>Reads <code>count</code> bytes and returns them as an array of <code>UInt8</code>, advancing by <code>count</code> BYTE positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC3int9fromBytesS2i_tF":{"name":"int(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as an <code>Int</code> number, advancing by <code>fromBytes</code> BYTE positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC6uint64s6UInt64VyF":{"name":"uint64()","abstract":"<p>Reads 8 bytes and returns them as a <code>UInt64</code> number, advancing by 8 BYTE positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC6uint649fromBytess6UInt64VSi_tF":{"name":"uint64(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as a <code>UInt64</code> number, advancing by <code>fromBytes</code> BYTE positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC6uint32s6UInt32VyF":{"name":"uint32()","abstract":"<p>Reads 4 bytes and returns them as a <code>UInt32</code> number, advancing by 4 BYTE positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC6uint329fromBytess6UInt32VSi_tF":{"name":"uint32(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as a <code>UInt32</code> number, advancing by <code>fromBytes</code> BYTE positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC6uint16s6UInt16VyF":{"name":"uint16()","abstract":"<p>Reads 2 bytes and returns them as a <code>UInt16</code> number, advancing by 2 BYTE positions.</p>","parent_name":"LsbBitReader"},"Classes/LsbBitReader.html#/s:11BitByteData03LsbA6ReaderC6uint169fromBytess6UInt16VSi_tF":{"name":"uint16(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as a <code>UInt16</code> number, advancing by <code>fromBytes</code> BYTE positions.</p>","parent_name":"LsbBitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP9isAlignedSbvp":{"name":"isAligned","abstract":"<p>True, if reader&rsquo;s BIT pointer is aligned with the BYTE border.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP8bitsLeftSivp":{"name":"bitsLeft","abstract":"<p>Amount of bits left to read.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP8bitsReadSivp":{"name":"bitsRead","abstract":"<p>Amount of bits that were already read.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP4datax10Foundation0C0V_tcfc":{"name":"init(data:)","abstract":"<p>Creates an instance for reading bits (and bytes) from <code>data</code>.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderPyxAA0bD0Ccfc":{"name":"init(_:)","abstract":"<p>Converts a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ByteReader.html\">ByteReader</a></code> instance into <code>BitReader</code>, enabling bits reading capabilities. Current <code>offset</code> value of","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP3bits5UInt8VyF":{"name":"bit()","abstract":"<p>Reads bit and returns it, advancing by one BIT position.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP4bits5countSays5UInt8VGSi_tF":{"name":"bits(count:)","abstract":"<p>Reads <code>count</code> bits and returns them as an array of <code>UInt8</code>, advancing by <code>count</code> BIT positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP3int8fromBitsS2i_tF":{"name":"int(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>Int</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP4byte8fromBitss5UInt8VSi_tF":{"name":"byte(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt8</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP6uint168fromBitss6UInt16VSi_tF":{"name":"uint16(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt16</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP6uint328fromBitss6UInt32VSi_tF":{"name":"uint32(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt32</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP6uint648fromBitss6UInt64VSi_tF":{"name":"uint64(fromBits:)","abstract":"<p>Reads <code>fromBits</code> bits and returns them as an <code>UInt64</code> number, advancing by <code>fromBits</code> BIT positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP5alignyyF":{"name":"align()","abstract":"<p>Aligns reader&rsquo;s BIT pointer to the BYTE border, i.e. moves BIT pointer to the first BIT of the next BYTE.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP4bytes5UInt8VyF":{"name":"byte()","abstract":"<p>Reads byte and returns it, advancing by one BYTE position.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP5bytes5countSays5UInt8VGSi_tF":{"name":"bytes(count:)","abstract":"<p>Reads <code>count</code> bytes and returns them as an array of <code>UInt8</code>, advancing by <code>count</code> BYTE positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP3int9fromBytesS2i_tF":{"name":"int(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as an <code>Int</code> number, advancing by <code>fromBytes</code> BYTE positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP6uint64s6UInt64VyF":{"name":"uint64()","abstract":"<p>Reads 8 bytes and returns them as a <code>UInt64</code> number, advancing by 8 BYTE positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP6uint649fromBytess6UInt64VSi_tF":{"name":"uint64(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as a <code>UInt64</code> number, advancing by 8 BYTE positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP6uint32s6UInt32VyF":{"name":"uint32()","abstract":"<p>Reads 4 bytes and returns them as a <code>UInt32</code> number, advancing by 4 BYTE positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP6uint329fromBytess6UInt32VSi_tF":{"name":"uint32(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as a <code>UInt32</code> number, advancing by 8 BYTE positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP6uint16s6UInt16VyF":{"name":"uint16()","abstract":"<p>Reads 2 bytes and returns them as a <code>UInt16</code> number, advancing by 2 BYTE positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html#/s:11BitByteData0A6ReaderP6uint169fromBytess6UInt16VSi_tF":{"name":"uint16(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as a <code>UInt16</code> number, advancing by 8 BYTE positions.</p>","parent_name":"BitReader"},"Protocols/BitReader.html":{"name":"BitReader","abstract":"<p>A type that contains functions for reading <code>Data</code> bit-by-bit and byte-by-byte.</p>"},"Classes/LsbBitReader.html":{"name":"LsbBitReader","abstract":"<p>A type that contains functions for reading <code>Data</code> bit-by-bit and byte-by-byte, assuming <q>LSB0</q> bit numbering scheme.</p>"},"Classes/MsbBitReader.html":{"name":"MsbBitReader","abstract":"<p>A type that contains functions for reading <code>Data</code> bit-by-bit and byte-by-byte, assuming <q>MSB0</q> bit numbering scheme.</p>"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC4sizeSivp":{"name":"size","abstract":"<p>Size of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ByteReader.html#/s:11BitByteData0B6ReaderC4data10Foundation0C0Vvp\">data</a></code> (in bytes).</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC4data10Foundation0C0Vvp":{"name":"data","abstract":"<p>Data which is being read.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC6offsetSivp":{"name":"offset","abstract":"<p>Offset to the byte in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ByteReader.html#/s:11BitByteData0B6ReaderC4data10Foundation0C0Vvp\">data</a></code> which will be read next.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC10isFinishedSbvp":{"name":"isFinished","abstract":"<p>True, if <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ByteReader.html#/s:11BitByteData0B6ReaderC6offsetSivp\">offset</a></code> points at any position after the last byte in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ByteReader.html#/s:11BitByteData0B6ReaderC4data10Foundation0C0Vvp\">data</a></code>.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC9bytesLeftSivp":{"name":"bytesLeft","abstract":"<p>Amount of bytes left to read.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC9bytesReadSivp":{"name":"bytesRead","abstract":"<p>Amount of bytes that were already read.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC4dataAC10Foundation0C0V_tcfc":{"name":"init(data:)","abstract":"<p>Creates an instance for reading bytes from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ByteReader.html#/s:11BitByteData0B6ReaderC4data10Foundation0C0Vvp\">data</a></code>.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC4bytes5UInt8VyF":{"name":"byte()","abstract":"<p>Reads byte and returns it, advancing by one position.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC5bytes5countSays5UInt8VGSi_tF":{"name":"bytes(count:)","abstract":"<p>Reads <code>count</code> bytes and returns them as an array of <code>UInt8</code>, advancing by <code>count</code> positions.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC3int9fromBytesS2i_tF":{"name":"int(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as an <code>Int</code> number, advancing by <code>fromBytes</code> positions.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC6uint64s6UInt64VyF":{"name":"uint64()","abstract":"<p>Reads 8 bytes and returns them as a <code>UInt64</code> number, advancing by 8 positions.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC6uint649fromBytess6UInt64VSi_tF":{"name":"uint64(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as an <code>UInt64</code> number, advancing by <code>fromBytes</code> positions.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC6uint32s6UInt32VyF":{"name":"uint32()","abstract":"<p>Reads 4 bytes and returns them as a <code>UInt32</code> number, advancing by 4 positions.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC6uint329fromBytess6UInt32VSi_tF":{"name":"uint32(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as an <code>UInt32</code> number, advancing by <code>fromBytes</code> positions.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC6uint16s6UInt16VyF":{"name":"uint16()","abstract":"<p>Reads 2 bytes and returns them as a <code>UInt16</code> number, advancing by 2 positions.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html#/s:11BitByteData0B6ReaderC6uint169fromBytess6UInt16VSi_tF":{"name":"uint16(fromBytes:)","abstract":"<p>Reads <code>fromBytes</code> bytes and returns them as an <code>UInt16</code> number, advancing by <code>fromBytes</code> positions.</p>","parent_name":"ByteReader"},"Classes/ByteReader.html":{"name":"ByteReader","abstract":"<p>A type that contains functions for reading <code>Data</code> byte-by-byte.</p>"},"Reading bytes.html":{"name":"Reading bytes"},"Reading bits (and bytes).html":{"name":"Reading bits (and bytes)"},"Writing bits (and bytes).html":{"name":"Writing bits (and bytes)"}}